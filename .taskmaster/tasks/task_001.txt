# Task ID: 1
# Title: Setup Subtraction Types and Interfaces
# Status: pending
# Dependencies: None
# Priority: high
# Description: Create TypeScript interfaces for subtraction feature after establishing shared components.
# Details:
Before creating subtraction types, extract and create shared components ProblemInput, ValidationFeedback, and SubmitControls from existing operation displays. Then, create src/types/subtraction.ts with interfaces SubtractionLevel, SubtractionProblem, SubtractionStep, SubtractionUserAnswer, SubtractionCurrentFocus, and SubtractionGameState. Update src/types/game.ts to include 'subtraction' in GameMode union type.

# Test Strategy:
Verify shared components are correctly extracted and integrated. Ensure TypeScript interfaces compile without errors and are correctly imported in relevant modules.

# Subtasks:
## 1. Create Individual Interfaces [pending]
### Dependencies: None
### Description: Design and implement each required interface separately for the project.
### Details:
Identify all the interfaces needed for the project and create them with the necessary properties and methods.

## 2. Update Game Mode Union Type [pending]
### Dependencies: 1.1
### Description: Modify the existing game mode union type to include new interfaces.
### Details:
Ensure that the game mode union type is updated to reflect the newly created interfaces, maintaining compatibility with existing code.

## 3. Extract Shared Components [pending]
### Dependencies: None
### Description: Extract ProblemInput, ValidationFeedback, and SubmitControls components from existing operation displays.
### Details:
Locate the existing operation displays and extract the ProblemInput, ValidationFeedback, and SubmitControls components. Ensure these components are reusable and integrated into the shared components index.ts file.

